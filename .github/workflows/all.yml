name: kubernetes deployments

on:
  push:
    branches: [ master ]

env:
  KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
  INGRESS_DOMAIN: ${{ secrets.INGRESS_DOMAIN }}
  INGRESS_BASIC_AUTH_USERNAME: ${{ secrets.INGRESS_BASIC_AUTH_USERNAME }}
  INGRESS_BASIC_AUTH_PASSWORD: ${{ secrets.INGRESS_BASIC_AUTH_PASSWORD }}
  REPO_MIRRORER_GITLAB_TOKEN: ${{ secrets.REPO_MIRRORER_GITLAB_TOKEN }}
  JCIO_HTTP_HMAC_SECRET: ${{ secrets.JCIO_HTTP_HMAC_SECRET }}
  JCIO_MOVIEDB_HOST: ${{ secrets.JCIO_MOVIEDB_HOST }}
  JCIO_MOVIEDB_NAME: ${{ secrets.JCIO_MOVIEDB_NAME }}
  JCIO_MOVIEDB_USERNAME: ${{ secrets.JCIO_MOVIEDB_USERNAME }}
  JCIO_MOVIEDB_PASSWORD: ${{ secrets.JCIO_MOVIEDB_PASSWORD }}
  HOME_INFO_AUTH_USERNAME: ${{ secrets.HOME_INFO_AUTH_USERNAME }}
  HOME_INFO_AUTH_PASSWORD: ${{ secrets.HOME_INFO_AUTH_PASSWORD }}
  HOME_INFO_SLACK_TOKEN: ${{ secrets.HOME_INFO_SLACK_TOKEN }}
  HOME_INFO_TEAMS_WEBHOOK_URL: ${{ secrets.HOME_INFO_TEAMS_WEBHOOK_URL }}
  HOME_INFO_DB_HOST: ${{ secrets.HOME_INFO_DB_HOST }}
  HOME_INFO_DB_NAME: ${{ secrets.HOME_INFO_DB_NAME }}
  HOME_INFO_DB_USERNAME: ${{ secrets.HOME_INFO_DB_USERNAME }}
  HOME_INFO_DB_PASSWORD: ${{ secrets.HOME_INFO_DB_PASSWORD }}
  IR_VISUALIZER_DB_HOST: ${{ secrets.IR_VISUALIZER_DB_HOST }}
  IR_VISUALIZER_DB_NAME: ${{ secrets.IR_VISUALIZER_DB_NAME }}
  IR_VISUALIZER_DB_USERNAME: ${{ secrets.IR_VISUALIZER_DB_USERNAME }}
  IR_VISUALIZER_DB_PASSWORD: ${{ secrets.IR_VISUALIZER_DB_PASSWORD }}
  BACKMAN_S3_HOST: ${{ secrets.BACKMAN_S3_HOST }}
  BACKMAN_S3_KEY: ${{ secrets.BACKMAN_S3_KEY }}
  BACKMAN_S3_SECRET: ${{ secrets.BACKMAN_S3_SECRET }}

jobs:
  cf-env:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: cf-env
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy cf-env demo app
      working-directory: cf-env
      run: ./deploy.sh

  kuard:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: kuard
    needs: [ cf-env ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy kuard demo app
      working-directory: kuard
      run: ./deploy.sh

  pgweb:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: pgweb
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy pgweb postgres admin ui
      working-directory: pgweb
      run: ./deploy.sh

  backman:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: backman
    needs: [ pgweb ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy backman postgres backup app
      working-directory: backman
      run: ./deploy.sh

  jcio:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: jcio
    needs: [ cf-env ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy jcio homepage app
      working-directory: jcio
      run: ./deploy.sh

  home-info:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: home-info
    needs: [ jcio ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy home-info app
      working-directory: home-info
      run: ./deploy.sh

  image-puller:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: image-puller
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy image-puller cronjob
      working-directory: image-puller
      run: ./deploy.sh

  repo-mirrorer:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: repo-mirrorer
    needs: [ image-puller ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: deploy repo-mirrorer cronjob
      working-directory: repo-mirrorer
      run: ./deploy.sh
