name: kubernetes deployments

on:
  push:
    branches: [ master ]

env:
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

jobs:
  cf-env:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: cf-env
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy cf-env demo app
      working-directory: cf-env
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  # kuard:
  #   if: "!contains(github.event.head_commit.message, 'skip')"
  #   name: kuard
  #   needs: [ cf-env ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: deploy kuard demo app
  #     working-directory: kuard
  #     run: ./deploy.sh
  #   - name: cleanup
  #     if: ${{ always() }}
  #     run: ./cleanup.sh

  resume:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: resume
    needs: [ cf-env ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy resume web app
      working-directory: resume
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  pgweb:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: pgweb
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy pgweb postgres admin ui
      working-directory: pgweb
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  backman:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: backman
    needs: [ pgweb ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy backman postgres backup app
      working-directory: backman
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  jcio:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: jcio
    needs: [ backman ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy jcio homepage app
      working-directory: jcio
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  home-info:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: home-info
    needs: [ backman ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy home-info app
      working-directory: home-info
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  irvisualizer:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: irvisualizer
    needs: [ backman ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy iRacing visualization app
      working-directory: irvisualizer
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  # syncthing:
  #   if: "!contains(github.event.head_commit.message, 'skip')"
  #   name: syncthing
  #   needs: [ cf-env ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: deploy syncthing server
  #     working-directory: syncthing
  #     run: ./deploy.sh
  #   - name: cleanup
  #     if: ${{ always() }}
  #     run: ./cleanup.sh

  # minecraft:
  #   if: "!contains(github.event.head_commit.message, 'skip')"
  #   name: minecraft
  #   needs: [ cf-env ]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: deploy minecraft server
  #     working-directory: minecraft
  #     run: ./deploy.sh
  #   - name: cleanup
  #     if: ${{ always() }}
  #     run: ./cleanup.sh

  adguardhome:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: adguardhome
    needs: [ cf-env ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy adguardhome dns
      working-directory: adguardhome
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  wireguard:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: wireguard
    needs: [ adguardhome ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy wireguard server
      working-directory: wireguard
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  image-puller:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: image-puller
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy image-puller cronjob
      working-directory: image-puller
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh

  repo-mirrorer:
    if: "!contains(github.event.head_commit.message, 'skip')"
    name: repo-mirrorer
    needs: [ image-puller ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: deploy repo-mirrorer cronjob
      working-directory: repo-mirrorer
      run: ./deploy.sh
    - name: cleanup
      if: ${{ always() }}
      run: ./cleanup.sh
