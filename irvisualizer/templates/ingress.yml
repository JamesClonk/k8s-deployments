#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels")

#@ if len(data.values.configuration.ingress.domains) == 0 or len(data.values.configuration.ingress.domains[0]) == 0 or data.values.configuration.ingress.domains[0] == "example.org":
#@  assert.fail("configuration.ingress.domain is missing or invalid")
#@ end
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: irvisualizer
  namespace: irvisualizer
  labels: #@ labels("ingress")
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
#!    nginx.ingress.kubernetes.io/configuration-snippet: |
#!      more_set_headers "Cache-Control: public, max-age=0";
#!    nginx.ingress.kubernetes.io/server-snippet: |
#!      etag on;
spec:
  ingressClassName: nginx
  tls:
  - secretName: irvisualizer-tls
    hosts:
    #@ for/end host in data.values.configuration.ingress.domains:
    - #@ "irvisualizer." + host
  rules:
  #@ for/end host in data.values.configuration.ingress.domains:
  - host: #@ "irvisualizer." + host
    http:
      paths:
      - backend:
          service:
            name: irvisualizer
            port:
              number: 8080
        path: /
        pathType: Prefix

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ircollector
  namespace: irvisualizer
  labels: #@ labels("ingress")
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - secretName: ircollector-tls
    hosts:
    #@ for/end host in data.values.configuration.ingress.domains:
    - #@ "ircollector." + host
  rules:
  #@ for/end host in data.values.configuration.ingress.domains:
  - host: #@ "ircollector." + host
    http:
      paths:
      - backend:
          service:
            name: ircollector
            port:
              number: 8080
        path: /
        pathType: Prefix
