#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels")

#@ if len(data.values.configuration.ingress.domains) == 0 or len(data.values.configuration.ingress.domains[0]) == 0 or data.values.configuration.ingress.domains[0] == "example.org":
#@  assert.fail("configuration.ingress.domain is missing or invalid")
#@ end
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backman
  namespace: backman
  labels: #@ labels("ingress")
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-signin: #@ "https://oauth2-proxy." + data.values.configuration.ingress.domains[0] + "/oauth2/start"
    nginx.ingress.kubernetes.io/auth-url: #@ "https://oauth2-proxy." + data.values.configuration.ingress.domains[0] + "/oauth2/auth"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - secretName: backman-tls
    hosts:
    #@ for/end host in data.values.configuration.ingress.domains:
    - #@ "backman." + host
  rules:
  #@ for/end host in data.values.configuration.ingress.domains:
  - host: #@ "backman." + host
    http:
      paths:
      - backend:
          serviceName: backman
          servicePort: 8080
