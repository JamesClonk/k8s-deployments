#@ load("@ytt:data", "data")
#@ load("_ytt.lib.yml", "labels", "podAntiAffinity")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-info
  namespace: home-info
  labels: #@ labels("dashboard")
spec:
  selector:
    matchLabels: #@ labels("dashboard")
  replicas: #@ data.values.home_info.replicas
  revisionHistoryLimit: 5
  template:
    metadata:
      labels: #@ labels("dashboard")
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: home-info
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
      affinity: #@ podAntiAffinity("dashboard")
      containers:
      - name: home-info
        image: #@ data.values.home_info.image
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: TZ
          value: "Europe/Zurich"
        - name: DEFAULT_CANTON
          value: "Bern"
        - name: DEFAULT_CITY
          value: "Bern"
        envFrom:
        - secretRef:
            name: home-info
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          httpGet:
            path: /
            port: 8080
